{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nconst isGeneratorFunction = require('is-generator-function');\n\nconst debug = require('debug')('koa:application');\n\nconst onFinished = require('on-finished');\n\nconst response = require('./response');\n\nconst compose = require('koa-compose');\n\nconst context = require('./context');\n\nconst request = require('./request');\n\nconst statuses = require('statuses');\n\nconst Emitter = require('events');\n\nconst util = require('util');\n\nconst Stream = require('stream');\n\nconst http = require('http');\n\nconst only = require('only');\n\nconst convert = require('koa-convert');\n\nconst deprecate = require('depd')('koa');\n\nconst {\n  HttpError\n} = require('http-errors');\n/**\n * Expose `Application` class.\n * Inherits from `Emitter.prototype`.\n */\n\n\nmodule.exports = class Application extends Emitter {\n  /**\n   * Initialize a new `Application`.\n   *\n   * @api public\n   */\n\n  /**\n    *\n    * @param {object} [options] Application options\n    * @param {string} [options.env='development'] Environment\n    * @param {string[]} [options.keys] Signed cookie keys\n    * @param {boolean} [options.proxy] Trust proxy headers\n    * @param {number} [options.subdomainOffset] Subdomain offset\n    * @param {boolean} [options.proxyIpHeader] proxy ip header, default to X-Forwarded-For\n    * @param {boolean} [options.maxIpsCount] max ips read from proxy ip header, default to 0 (means infinity)\n    *\n    */\n  constructor(options) {\n    super();\n    options = options || {};\n    this.proxy = options.proxy || false;\n    this.subdomainOffset = options.subdomainOffset || 2;\n    this.proxyIpHeader = options.proxyIpHeader || 'X-Forwarded-For';\n    this.maxIpsCount = options.maxIpsCount || 0;\n    this.env = options.env || process.env.NODE_ENV || 'development';\n    if (options.keys) this.keys = options.keys;\n    this.middleware = [];\n    this.context = Object.create(context);\n    this.request = Object.create(request);\n    this.response = Object.create(response); // util.inspect.custom support for node 6+\n\n    /* istanbul ignore else */\n\n    if (util.inspect.custom) {\n      this[util.inspect.custom] = this.inspect;\n    }\n  }\n  /**\n   * Shorthand for:\n   *\n   *    http.createServer(app.callback()).listen(...)\n   *\n   * @param {Mixed} ...\n   * @return {Server}\n   * @api public\n   */\n\n\n  listen(...args) {\n    debug('listen');\n    const server = http.createServer(this.callback());\n    return server.listen(...args);\n  }\n  /**\n   * Return JSON representation.\n   * We only bother showing settings.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n\n  toJSON() {\n    return only(this, ['subdomainOffset', 'proxy', 'env']);\n  }\n  /**\n   * Inspect implementation.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n\n  inspect() {\n    return this.toJSON();\n  }\n  /**\n   * Use the given middleware `fn`.\n   *\n   * Old-style middleware will be converted.\n   *\n   * @param {Function} fn\n   * @return {Application} self\n   * @api public\n   */\n\n\n  use(fn) {\n    if (typeof fn !== 'function') throw new TypeError('middleware must be a function!');\n\n    if (isGeneratorFunction(fn)) {\n      deprecate('Support for generators will be removed in v3. ' + 'See the documentation for examples of how to convert old middleware ' + 'https://github.com/koajs/koa/blob/master/docs/migration.md');\n      fn = convert(fn);\n    }\n\n    debug('use %s', fn._name || fn.name || '-');\n    this.middleware.push(fn);\n    return this;\n  }\n  /**\n   * Return a request handler callback\n   * for node's native http server.\n   *\n   * @return {Function}\n   * @api public\n   */\n\n\n  callback() {\n    const fn = compose(this.middleware);\n    if (!this.listenerCount('error')) this.on('error', this.onerror);\n\n    const handleRequest = (req, res) => {\n      const ctx = this.createContext(req, res);\n      return this.handleRequest(ctx, fn);\n    };\n\n    return handleRequest;\n  }\n  /**\n   * Handle request in callback.\n   *\n   * @api private\n   */\n\n\n  handleRequest(ctx, fnMiddleware) {\n    const res = ctx.res;\n    res.statusCode = 404;\n\n    const onerror = err => ctx.onerror(err);\n\n    const handleResponse = () => respond(ctx);\n\n    onFinished(res, onerror);\n    return fnMiddleware(ctx).then(handleResponse).catch(onerror);\n  }\n  /**\n   * Initialize a new context.\n   *\n   * @api private\n   */\n\n\n  createContext(req, res) {\n    const context = Object.create(this.context);\n    const request = context.request = Object.create(this.request);\n    const response = context.response = Object.create(this.response);\n    context.app = request.app = response.app = this;\n    context.req = request.req = response.req = req;\n    context.res = request.res = response.res = res;\n    request.ctx = response.ctx = context;\n    request.response = response;\n    response.request = request;\n    context.originalUrl = request.originalUrl = req.url;\n    context.state = {};\n    return context;\n  }\n  /**\n   * Default error handler.\n   *\n   * @param {Error} err\n   * @api private\n   */\n\n\n  onerror(err) {\n    // When dealing with cross-globals a normal `instanceof` check doesn't work properly.\n    // See https://github.com/koajs/koa/issues/1466\n    // We can probably remove it once jest fixes https://github.com/facebook/jest/issues/2549.\n    const isNativeError = Object.prototype.toString.call(err) === '[object Error]' || err instanceof Error;\n    if (!isNativeError) throw new TypeError(util.format('non-error thrown: %j', err));\n    if (404 === err.status || err.expose) return;\n    if (this.silent) return;\n    const msg = err.stack || err.toString();\n    console.error(`\\n${msg.replace(/^/gm, '  ')}\\n`);\n  }\n\n};\n/**\n * Response helper.\n */\n\nfunction respond(ctx) {\n  // allow bypassing koa\n  if (false === ctx.respond) return;\n  if (!ctx.writable) return;\n  const res = ctx.res;\n  let body = ctx.body;\n  const code = ctx.status; // ignore body\n\n  if (statuses.empty[code]) {\n    // strip headers\n    ctx.body = null;\n    return res.end();\n  }\n\n  if ('HEAD' === ctx.method) {\n    if (!res.headersSent && !ctx.response.has('Content-Length')) {\n      const {\n        length\n      } = ctx.response;\n      if (Number.isInteger(length)) ctx.length = length;\n    }\n\n    return res.end();\n  } // status body\n\n\n  if (null == body) {\n    if (ctx.response._explicitNullBody) {\n      ctx.response.remove('Content-Type');\n      ctx.response.remove('Transfer-Encoding');\n      return res.end();\n    }\n\n    if (ctx.req.httpVersionMajor >= 2) {\n      body = String(code);\n    } else {\n      body = ctx.message || String(code);\n    }\n\n    if (!res.headersSent) {\n      ctx.type = 'text';\n      ctx.length = Buffer.byteLength(body);\n    }\n\n    return res.end(body);\n  } // responses\n\n\n  if (Buffer.isBuffer(body)) return res.end(body);\n  if ('string' === typeof body) return res.end(body);\n  if (body instanceof Stream) return body.pipe(res); // body: json\n\n  body = JSON.stringify(body);\n\n  if (!res.headersSent) {\n    ctx.length = Buffer.byteLength(body);\n  }\n\n  res.end(body);\n}\n/**\n * Make HttpError available to consumers of the library so that consumers don't\n * have a direct dependency upon `http-errors`\n */\n\n\nmodule.exports.HttpError = HttpError;","map":{"version":3,"sources":["/home/yunjun/go/src/link/application/node_modules/koa/lib/application.js"],"names":["isGeneratorFunction","require","debug","onFinished","response","compose","context","request","statuses","Emitter","util","Stream","http","only","convert","deprecate","HttpError","module","exports","Application","constructor","options","proxy","subdomainOffset","proxyIpHeader","maxIpsCount","env","process","NODE_ENV","keys","middleware","Object","create","inspect","custom","listen","args","server","createServer","callback","toJSON","use","fn","TypeError","_name","name","push","listenerCount","on","onerror","handleRequest","req","res","ctx","createContext","fnMiddleware","statusCode","err","handleResponse","respond","then","catch","app","originalUrl","url","state","isNativeError","prototype","toString","call","Error","format","status","expose","silent","msg","stack","console","error","replace","writable","body","code","empty","end","method","headersSent","has","length","Number","isInteger","_explicitNullBody","remove","httpVersionMajor","String","message","type","Buffer","byteLength","isBuffer","pipe","JSON","stringify"],"mappings":"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","sourcesContent":["\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst isGeneratorFunction = require('is-generator-function');\nconst debug = require('debug')('koa:application');\nconst onFinished = require('on-finished');\nconst response = require('./response');\nconst compose = require('koa-compose');\nconst context = require('./context');\nconst request = require('./request');\nconst statuses = require('statuses');\nconst Emitter = require('events');\nconst util = require('util');\nconst Stream = require('stream');\nconst http = require('http');\nconst only = require('only');\nconst convert = require('koa-convert');\nconst deprecate = require('depd')('koa');\nconst { HttpError } = require('http-errors');\n\n/**\n * Expose `Application` class.\n * Inherits from `Emitter.prototype`.\n */\n\nmodule.exports = class Application extends Emitter {\n  /**\n   * Initialize a new `Application`.\n   *\n   * @api public\n   */\n\n  /**\n    *\n    * @param {object} [options] Application options\n    * @param {string} [options.env='development'] Environment\n    * @param {string[]} [options.keys] Signed cookie keys\n    * @param {boolean} [options.proxy] Trust proxy headers\n    * @param {number} [options.subdomainOffset] Subdomain offset\n    * @param {boolean} [options.proxyIpHeader] proxy ip header, default to X-Forwarded-For\n    * @param {boolean} [options.maxIpsCount] max ips read from proxy ip header, default to 0 (means infinity)\n    *\n    */\n\n  constructor(options) {\n    super();\n    options = options || {};\n    this.proxy = options.proxy || false;\n    this.subdomainOffset = options.subdomainOffset || 2;\n    this.proxyIpHeader = options.proxyIpHeader || 'X-Forwarded-For';\n    this.maxIpsCount = options.maxIpsCount || 0;\n    this.env = options.env || process.env.NODE_ENV || 'development';\n    if (options.keys) this.keys = options.keys;\n    this.middleware = [];\n    this.context = Object.create(context);\n    this.request = Object.create(request);\n    this.response = Object.create(response);\n    // util.inspect.custom support for node 6+\n    /* istanbul ignore else */\n    if (util.inspect.custom) {\n      this[util.inspect.custom] = this.inspect;\n    }\n  }\n\n  /**\n   * Shorthand for:\n   *\n   *    http.createServer(app.callback()).listen(...)\n   *\n   * @param {Mixed} ...\n   * @return {Server}\n   * @api public\n   */\n\n  listen(...args) {\n    debug('listen');\n    const server = http.createServer(this.callback());\n    return server.listen(...args);\n  }\n\n  /**\n   * Return JSON representation.\n   * We only bother showing settings.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  toJSON() {\n    return only(this, [\n      'subdomainOffset',\n      'proxy',\n      'env'\n    ]);\n  }\n\n  /**\n   * Inspect implementation.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  inspect() {\n    return this.toJSON();\n  }\n\n  /**\n   * Use the given middleware `fn`.\n   *\n   * Old-style middleware will be converted.\n   *\n   * @param {Function} fn\n   * @return {Application} self\n   * @api public\n   */\n\n  use(fn) {\n    if (typeof fn !== 'function') throw new TypeError('middleware must be a function!');\n    if (isGeneratorFunction(fn)) {\n      deprecate('Support for generators will be removed in v3. ' +\n                'See the documentation for examples of how to convert old middleware ' +\n                'https://github.com/koajs/koa/blob/master/docs/migration.md');\n      fn = convert(fn);\n    }\n    debug('use %s', fn._name || fn.name || '-');\n    this.middleware.push(fn);\n    return this;\n  }\n\n  /**\n   * Return a request handler callback\n   * for node's native http server.\n   *\n   * @return {Function}\n   * @api public\n   */\n\n  callback() {\n    const fn = compose(this.middleware);\n\n    if (!this.listenerCount('error')) this.on('error', this.onerror);\n\n    const handleRequest = (req, res) => {\n      const ctx = this.createContext(req, res);\n      return this.handleRequest(ctx, fn);\n    };\n\n    return handleRequest;\n  }\n\n  /**\n   * Handle request in callback.\n   *\n   * @api private\n   */\n\n  handleRequest(ctx, fnMiddleware) {\n    const res = ctx.res;\n    res.statusCode = 404;\n    const onerror = err => ctx.onerror(err);\n    const handleResponse = () => respond(ctx);\n    onFinished(res, onerror);\n    return fnMiddleware(ctx).then(handleResponse).catch(onerror);\n  }\n\n  /**\n   * Initialize a new context.\n   *\n   * @api private\n   */\n\n  createContext(req, res) {\n    const context = Object.create(this.context);\n    const request = context.request = Object.create(this.request);\n    const response = context.response = Object.create(this.response);\n    context.app = request.app = response.app = this;\n    context.req = request.req = response.req = req;\n    context.res = request.res = response.res = res;\n    request.ctx = response.ctx = context;\n    request.response = response;\n    response.request = request;\n    context.originalUrl = request.originalUrl = req.url;\n    context.state = {};\n    return context;\n  }\n\n  /**\n   * Default error handler.\n   *\n   * @param {Error} err\n   * @api private\n   */\n\n  onerror(err) {\n    // When dealing with cross-globals a normal `instanceof` check doesn't work properly.\n    // See https://github.com/koajs/koa/issues/1466\n    // We can probably remove it once jest fixes https://github.com/facebook/jest/issues/2549.\n    const isNativeError =\n      Object.prototype.toString.call(err) === '[object Error]' ||\n      err instanceof Error;\n    if (!isNativeError) throw new TypeError(util.format('non-error thrown: %j', err));\n\n    if (404 === err.status || err.expose) return;\n    if (this.silent) return;\n\n    const msg = err.stack || err.toString();\n    console.error(`\\n${msg.replace(/^/gm, '  ')}\\n`);\n  }\n};\n\n/**\n * Response helper.\n */\n\nfunction respond(ctx) {\n  // allow bypassing koa\n  if (false === ctx.respond) return;\n\n  if (!ctx.writable) return;\n\n  const res = ctx.res;\n  let body = ctx.body;\n  const code = ctx.status;\n\n  // ignore body\n  if (statuses.empty[code]) {\n    // strip headers\n    ctx.body = null;\n    return res.end();\n  }\n\n  if ('HEAD' === ctx.method) {\n    if (!res.headersSent && !ctx.response.has('Content-Length')) {\n      const { length } = ctx.response;\n      if (Number.isInteger(length)) ctx.length = length;\n    }\n    return res.end();\n  }\n\n  // status body\n  if (null == body) {\n    if (ctx.response._explicitNullBody) {\n      ctx.response.remove('Content-Type');\n      ctx.response.remove('Transfer-Encoding');\n      return res.end();\n    }\n    if (ctx.req.httpVersionMajor >= 2) {\n      body = String(code);\n    } else {\n      body = ctx.message || String(code);\n    }\n    if (!res.headersSent) {\n      ctx.type = 'text';\n      ctx.length = Buffer.byteLength(body);\n    }\n    return res.end(body);\n  }\n\n  // responses\n  if (Buffer.isBuffer(body)) return res.end(body);\n  if ('string' === typeof body) return res.end(body);\n  if (body instanceof Stream) return body.pipe(res);\n\n  // body: json\n  body = JSON.stringify(body);\n  if (!res.headersSent) {\n    ctx.length = Buffer.byteLength(body);\n  }\n  res.end(body);\n}\n\n/**\n * Make HttpError available to consumers of the library so that consumers don't\n * have a direct dependency upon `http-errors`\n */\nmodule.exports.HttpError = HttpError;\n"]},"metadata":{},"sourceType":"script"}