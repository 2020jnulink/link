{"ast":null,"code":"var _jsxFileName = \"/home/yunjun/go/src/link/application/src/components/ProductInfo.js\";\nimport React, { Component } from 'react';\n\nclass ProductInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 우리는 수정 버튼을 눌렀을 떄 editing 값을 true 로 설정해줄것입니다.\n      // 이 값이 true 일 때에는, 기존에 텍스트 형태로 보여주던 값들을\n      // input 형태로 보여주게 됩니다.\n      editing: false,\n      // input 의 값은 유동적이겠지요? input 값을 담기 위해서 각 필드를 위한 값도\n      // 설정합니다\n      name: '',\n      phone: ''\n    };\n\n    this.handleRemove = () => {\n      // 삭제 버튼이 클릭되면 onRemove 에 id 넣어서 호출\n      const {\n        info,\n        onRemove\n      } = this.props;\n      onRemove(info.id);\n    };\n\n    this.handleToggleEdit = () => {\n      const {\n        editing\n      } = this.state;\n      this.setState({\n        editing: !editing\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // 여기서는, editing 값이 바뀔 때 처리 할 로직이 적혀있습니다.\n    // 수정을 눌렀을땐, 기존의 값이 input에 나타나고,\n    // 수정을 적용할땐, input 의 값들을 부모한테 전달해줍니다.\n    const {\n      info,\n      onUpdate\n    } = this.props;\n\n    if (!prevState.editing && this.state.editing) {\n      // editing 값이 false -> true 로 전환 될 때\n      // info 의 값을 state 에 넣어준다\n      this.setState({\n        name: info.name,\n        phone: info.phone\n      });\n    }\n\n    if (prevState.editing && !this.state.editing) {\n      // editing 값이 true -> false 로 전환 될 때\n      onUpdate(info.id, {\n        name: this.state.name,\n        phone: this.state.phone\n      });\n    }\n  }\n\n  render() {\n    const style = {\n      border: '1px solid black',\n      padding: '8px',\n      margin: '8px'\n    };\n    const {\n      editing\n    } = this.state;\n\n    if (editing) {\n      // 수정모드\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.name,\n        name: \"name\",\n        placeholder: \"\\uC774\\uB984\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.phone,\n        name: \"phone\",\n        placeholder: \"\\uC804\\uD654\\uBC88\\uD638\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleToggleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"\\uC801\\uC6A9\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    } // 일반모드\n\n\n    const {\n      name,\n      phone\n    } = this.props.info;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, phone), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleToggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"\\uC0AD\\uC81C\"));\n  }\n\n}\n\nProductInfo.defaultProps = {\n  info: {\n    name: '이름',\n    phone: '010-0000-0000',\n    id: 0\n  }\n};\nexport default ProductInfo;","map":{"version":3,"sources":["/home/yunjun/go/src/link/application/src/components/ProductInfo.js"],"names":["React","Component","ProductInfo","state","editing","name","phone","handleRemove","info","onRemove","props","id","handleToggleEdit","setState","handleChange","e","value","target","componentDidUpdate","prevProps","prevState","onUpdate","render","style","border","padding","margin","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass ProductInfo extends Component {\n  static defaultProps = {\n    info: {\n      name: '이름',\n      phone: '010-0000-0000',\n      id: 0\n    },\n  }\n  state = {\n    // 우리는 수정 버튼을 눌렀을 떄 editing 값을 true 로 설정해줄것입니다.\n    // 이 값이 true 일 때에는, 기존에 텍스트 형태로 보여주던 값들을\n    // input 형태로 보여주게 됩니다.\n    editing: false,\n    // input 의 값은 유동적이겠지요? input 값을 담기 위해서 각 필드를 위한 값도\n    // 설정합니다\n    name: '',\n    phone: '',\n  }\n  handleRemove = () => {\n    // 삭제 버튼이 클릭되면 onRemove 에 id 넣어서 호출\n    const { info, onRemove } = this.props;\n    onRemove(info.id);\n  }\n  // editing 값을 반전시키는 함수입니다\n  // true -> false, false -> true\n  handleToggleEdit = () => {\n    const { editing } = this.state;\n    this.setState({ editing: !editing });\n  }\n  // input 에서 onChange 이벤트가 발생 될 때\n  // 호출되는 함수입니다\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // 여기서는, editing 값이 바뀔 때 처리 할 로직이 적혀있습니다.\n    // 수정을 눌렀을땐, 기존의 값이 input에 나타나고,\n    // 수정을 적용할땐, input 의 값들을 부모한테 전달해줍니다.\n    const { info, onUpdate } = this.props;\n    if (!prevState.editing && this.state.editing) {\n      // editing 값이 false -> true 로 전환 될 때\n      // info 의 값을 state 에 넣어준다\n      this.setState({\n        name: info.name,\n        phone: info.phone\n      })\n    }\n    if (prevState.editing && !this.state.editing) {\n      // editing 값이 true -> false 로 전환 될 때\n      onUpdate(info.id, {\n        name: this.state.name,\n        phone: this.state.phone\n      });\n    }\n  }\n\n  render() {\n    const style = {\n      border: '1px solid black',\n      padding: '8px',\n      margin: '8px'\n    };\n    const { editing } = this.state;\n    if (editing) { // 수정모드\n      return (\n        <div style={style}>\n          <div>\n            <input\n              value={this.state.name}\n              name=\"name\"\n              placeholder=\"이름\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <input\n              value={this.state.phone}\n              name=\"phone\"\n              placeholder=\"전화번호\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <button onClick={this.handleToggleEdit}>적용</button>\n          <button onClick={this.handleRemove}>삭제</button>\n        </div>\n      );\n    }\n    // 일반모드\n    const {\n      name, phone\n    } = this.props.info;\n    return (\n      <div style={style}>\n        <div><b>{name}</b></div>\n        <div>{phone}</div>\n        <button onClick={this.handleToggleEdit}>수정</button>\n        <button onClick={this.handleRemove}>삭제</button>\n      </div>\n    );\n  }\n}\n\nexport default ProductInfo"]},"metadata":{},"sourceType":"module"}